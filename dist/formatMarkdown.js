'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatReport = exports.markdownFileTable = exports.markdownOwnersTable = exports.markdownAllTable = undefined;

var _markdownTable = require('markdown-table');

var _markdownTable2 = _interopRequireDefault(_markdownTable);

var _config = require('./config');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const metricsFor = (metricKeys, record) => metricKeys.map(metric => record[metric] || '-');

const markdownAllTable = exports.markdownAllTable = (specMetricKeys, all) => {
  const metricKeys = [_config.FILES_SUM_METRIC_KEY, ...specMetricKeys];

  const headers = metricKeys;

  const rows = metricsFor(metricKeys, all);

  return (0, _markdownTable2.default)([headers, rows]);
};

const markdownOwnersTable = exports.markdownOwnersTable = (specMetricKeys, ownerSum) => {
  const metricKeys = [_config.FILES_SUM_METRIC_KEY, ...specMetricKeys];

  const headers = ['owner', ...metricKeys];

  const rows = Object.keys(ownerSum).map(owner => [owner, ...metricsFor(metricKeys, ownerSum[owner])]);

  return (0, _markdownTable2.default)([headers, ...rows]);
};

const markdownFileTable = exports.markdownFileTable = (metricKeys, eachFile) => {
  const headers = ['filename', ...metricKeys];

  const rows = Object.keys(eachFile).map(filename => [filename, ...metricsFor(metricKeys, eachFile[filename])]);

  return (0, _markdownTable2.default)([headers, ...rows]);
};

/**
 * Format the report as Markdown text
 */
const formatReport = exports.formatReport = (reportSpec, report) => {
  const specMetricKeys = [...Object.keys(reportSpec.regexpMetrics || {}), ...Object.keys(reportSpec.eslintFlags || {})];

  const content = ['This report was autogenerated by code-owners-report.', '## All files', markdownAllTable(specMetricKeys, report.allSum), '## By owner (non-exclusive)', report.ownerSum ? markdownOwnersTable(specMetricKeys, report.ownerSum) : 'Missing CODEOWNERS', '## Each file', markdownFileTable(['owners', ...specMetricKeys], report.eachFile), '\n'].join('\n\n');

  return content;
};